INPUT(
../../builder/jump64.o
prt0.o
HelloWorldMicroservice.o
../../rtl/system.o
../../rtl/Kernel.o
../../rtl/Process.o
../../rtl/Memory.o
../../rtl/Debug.o
../../rtl/Arch.o
../../rtl/Filesystem.o
../../rtl/drivers/Pci.o
../../rtl/drivers/Console.o
../../rtl/drivers/VirtIONet.o
../../rtl/Network.o
../../rtl/SysUtils.o
../../rtl/lnfodwrfToro.o
)
OUTPUT_FORMAT(elf64-x86-64)
ENTRY(start64)
KERNEL_VMA = 0x440000;
SECTIONS
{
    . = KERNEL_VMA;

    .text : AT(ADDR(.text) - KERNEL_VMA)
    {
        _code = .;
        *(.text)
        *(.rodata*)
        . = ALIGN(4096);
    }

   .data : AT(ADDR(.data) - KERNEL_VMA)
   {
        _data = .;
        *(.data)
        . = ALIGN(4096);
   }

   .ehframe : AT(ADDR(.ehframe) - KERNEL_VMA)
   {
       _ehframe = .;
       *(.ehframe)
        . = ALIGN(4096);
   }

   .bss : AT(ADDR(.bss) - KERNEL_VMA)
   {
       _bss = .;
       *(.bss)

       /*
        * You usually need to include generated COMMON symbols
        * under kernel BSS section or use gcc's -fno-common
        */

        *(COMMON)
       . = ALIGN(4096);
   }

   _end = .;

   /DISCARD/ :
   {
        *(.comment*)
   }
}

